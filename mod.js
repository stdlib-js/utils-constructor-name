// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");var t=Object.prototype.toString;var e=Object.prototype.hasOwnProperty;var n="function"==typeof Symbol?Symbol.toStringTag:"";var o=r&&"symbol"==typeof Symbol.toStringTag?function(r){var o,u,i,a,c;if(null==r)return t.call(r);u=r[n],c=n,o=null!=(a=r)&&e.call(a,c);try{r[n]=void 0}catch(e){return t.call(r)}return i=t.call(r),o?r[n]=u:delete r[n],i}:function(r){return t.call(r)},u="function"==typeof Object.defineProperty?Object.defineProperty:null;var i=Object.defineProperty,a=Object.prototype,c=a.toString,l=a.__defineGetter__,f=a.__defineSetter__,y=a.__lookupGetter__,p=a.__lookupSetter__;var s=function(){try{return u({},"x",{}),!0}catch(r){return!1}}()?i:function(r,t,e){var n,o,u,i;if("object"!=typeof r||null===r||"[object Array]"===c.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof e||null===e||"[object Array]"===c.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((o="value"in e)&&(y.call(r,t)||p.call(r,t)?(n=r.__proto__,r.__proto__=a,delete r[t],r[t]=e.value,r.__proto__=n):r[t]=e.value),u="get"in e,i="set"in e,o&&(u||i))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return u&&l&&l.call(r,t,e.get),i&&f&&f.call(r,t,e.set),r};function b(r,t,e){s(r,t,{configurable:!1,enumerable:!1,writable:!1,value:e})}function _(){return/^\s*function\s*([^(]*)/i}var v=/^\s*function\s*([^(]*)/i;b(_,"REGEXP",v);var m=Array.isArray?Array.isArray:function(r){return"[object Array]"===o(r)};function d(r){return null!==r&&"object"==typeof r}function g(r){var t,e,n,u;if(("Object"===(e=o(r).slice(8,-1))||"Error"===e)&&r.constructor){if("string"==typeof(n=r.constructor).name)return n.name;if(t=v.exec(n.toString()))return t[1]}return d(u=r)&&(u._isBuffer||u.constructor&&"function"==typeof u.constructor.isBuffer&&u.constructor.isBuffer(u))?"Buffer":e}b(d,"isObjectLikeArray",function(r){if("function"!=typeof r)throw new TypeError("invalid argument. Must provide a function. Value: `"+r+"`.");return function(t){var e,n;if(!m(t))return!1;if(0===(e=t.length))return!1;for(n=0;n<e;n++)if(!1===r(t[n]))return!1;return!0}}(d));export{g as default};
//# sourceMappingURL=mod.js.map
